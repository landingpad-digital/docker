services:
  base: &base
    build:
      context: .
      dockerfile: Dockerfile.chatwoot
    image: chatwoot/chatwoot:latest
    env_file: .env
    volumes:
      - storage_data:/app/storage

  rails:
    <<: *base
    container_name: chatwoot_rails
    depends_on:
      - postgres
      - redis
    ports:
      - '3002:3000'
    environment:
      - NODE_ENV=production
      - FORCE_SSL=false
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - RAILS_SERVE_STATIC_FILES=true
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

  sidekiq:
    <<: *base
    container_name: chatwoot_sidekiq
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=4096
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always

  postgres:
    container_name: chatwoot_postgres
    image: pgvector/pgvector:pg16
    restart: always
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot_production
      - POSTGRES_USER=chatwoot_user
      - POSTGRES_PASSWORD=chatwoot_password

  redis:
    container_name: chatwoot_redis
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis_data:/data
    ports:
      - '127.0.0.1:6379:6379'

volumes:
  storage_data:
  postgres_data:
  redis_data:

